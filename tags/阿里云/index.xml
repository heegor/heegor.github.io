<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>阿里云 on 保罗札记</title>
    <link>https://www.zengxi.net/tags/%E9%98%BF%E9%87%8C%E4%BA%91/</link>
    <description>Recent content in 阿里云 on 保罗札记</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Thu, 23 Jul 2020 06:05:31 +0000</lastBuildDate><atom:link href="https://www.zengxi.net/tags/%E9%98%BF%E9%87%8C%E4%BA%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>terraform中阿里云ECS ssh key变化问题</title>
      <link>https://www.zengxi.net/posts/2020/07/terraform_aliyun_ecs_ssh_key/</link>
      <pubDate>Thu, 23 Jul 2020 06:05:31 +0000</pubDate>
      
      <guid>https://www.zengxi.net/posts/2020/07/terraform_aliyun_ecs_ssh_key/</guid>
      <description>目前的terraform脚本中，在新建阿里云ECS的时候，会通过 user_data 属性值来设定初始的ssh key。但是这个就存在一个隐患，如果将来想要改变初始的ssh key，再用terraform来推机器的时候，terraform发现user_data属性值发生变化，会删除现有的ECS并重建。
解决的方法是，修改ECS的lifecycle，将user_data添加到忽略列表中。这样terraform就可以忽略掉该属性值的变化。
1{ 2 resource &amp;#34;alicloud_instance&amp;#34; &amp;#34;test_instance&amp;#34; { 3 ... 4 5 lifecycle { 6 ignore_changes = [&amp;#34;user_data&amp;#34;] 7 } 8 } 9} </description>
    </item>
    
    <item>
      <title>解决terraform与远程云服务器资源状态不一致的问题</title>
      <link>https://www.zengxi.net/posts/2020/07/terraform_state_consistent/</link>
      <pubDate>Wed, 22 Jul 2020 14:37:54 +0000</pubDate>
      
      <guid>https://www.zengxi.net/posts/2020/07/terraform_state_consistent/</guid>
      <description>概述 在运维过程中遇到了下面的情况：长期使用terraform管理资源，但是通过terraform以外的工具对云资源做过属性变更（比如通过网页上的控制台对云资源做属性变更）。此时，云资源的属性与terraform state的信息已经不一致，跑terraform plan就会发现，它会删除现有的，然后重建一个。但是这个是我们不希望看到的，我们希望可以保留原有实例并且把本地的terraform state更新成最新的属性。
解决方案 要想解决这个问题，可以利用 terraform import 命令。也就是重新导入云资源的实例，然后同步成最新的信息。
下面以阿里云ECS为例子。
(1)删除 state 中的现有资源 如果该资源受 terraform 管理，则需要先把它删除。执行下面的命令
1# 基于当前的tf文件，初始化 state 文件 2terraform init 3 4# 列出当前的state文件所有管理的项目清单 5terraform state list 6 7# 根据上面的输出，找到对应的项目的名称。通过rm删除, 下面假设项目名称是 alicloud_instance.testecs 8terraform state rm alicloud_instance.testecs (2)在阿里云控制台获取实例ID 登录阿里云网页上的控制台，获取所要导入的实例 ID
(3)tf 文件中添加实例的定义 保证本地的tf文件中有该实例资源的相关定义。如果没有，则可以用下面的方式在文件中新增内容。
如果是以resource模式定义，则添加下面内容，直接留空即可，其余的数据在后续步骤中可以补全
1resource &amp;#34;alicloud_instance&amp;#34; &amp;#34;testecs&amp;#34; {} 如果是以模块方式来定义，则添加下面内容，其余的数据在后续步骤中可以补全
1module &amp;#34;testmodule&amp;#34; { 2 source = &amp;#34;../modules/instance&amp;#34; 3 environment = &amp;#34;xxx&amp;#34; 4 vswitch_info = &amp;#34;xxxx&amp;#34; 5 vpc_id = &amp;#34;xxxx&amp;#34; 6 instance_type = &amp;#34;xxxx&amp;#34; 7 security_groups = &amp;#34;xxxx&amp;#34; 8 service = &amp;#34;xxxx&amp;#34; 9 instance_count = &amp;#34;xxxxx&amp;#34; 10 system_disk_size = &amp;#34;xxxxx&amp;#34; 11 system_disk_category = &amp;#34;xxxxx&amp;#34; 12 alicloud_availability_zones = &amp;#34;xxxxx&amp;#34; 13} ​</description>
    </item>
    
  </channel>
</rss>

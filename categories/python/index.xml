<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on 保罗札记</title>
    <link>https://www.zengxi.net/categories/python/</link>
    <description>Recent content in python on 保罗札记</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Mon, 01 Feb 2021 18:06:00 +0800</lastBuildDate><atom:link href="https://www.zengxi.net/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>用Python读取sitemap并调用百度接口推送URL</title>
      <link>https://www.zengxi.net/2021/02/python_push_url_to_baidu/</link>
      <pubDate>Mon, 01 Feb 2021 18:06:00 +0800</pubDate>
      
      <guid>https://www.zengxi.net/2021/02/python_push_url_to_baidu/</guid>
      <description>SEO对于网站的推广很重要，大多数搜索引擎都提供了一些API用于给站长主动提交URL，加快网页被收录的速度。
百度提供了快速收录的API接口，下面这个Python脚本可以用来读取本地磁盘中的sitemap.xml文件，并调用接口提交URL至百度。
仅需要修改下面的参数：
 lastUpdateTimeStr - 上次推送的时间。会与sitemap.xml中的时间做比较，仅推送在该时间之后更新的URL siteMapPath - sitemap.xml在本地磁盘上的存放路径 siteUrl - 网站地址 baiduApiToken - Baidu API的token tmpFile - 临时文件的保存地址 ignorePathPrefixes - 需要忽略的URL的前缀  1#!/usr/bin/env python3 2# coding: utf-8 3 4import xml.etree.ElementTree as ET 5from datetime import datetime 6import os 7 8 9### Methods ######### 10def stripNs(el): 11 # Recursively search this element tree, removing namespaces. 12 if el.tag.startswith(&amp;#34;{&amp;#34;): 13 el.tag = el.tag.split(&amp;#39;}&amp;#39;, 1)[1] # strip namespace 14 for k in el.</description>
    </item>
    
    <item>
      <title>使用Python在两个Postgres数据库直接复制数据</title>
      <link>https://www.zengxi.net/2021/01/python_copy_data_between_two_postgres/</link>
      <pubDate>Tue, 26 Jan 2021 17:17:00 +0800</pubDate>
      
      <guid>https://www.zengxi.net/2021/01/python_copy_data_between_two_postgres/</guid>
      <description>在python脚本中，通过 psycopg2 库的copy_expert，可以很方便地在两个Postgres数据库之间复制数据
1s = StringIO() 2 3# Export into memory buffer 4sql = &amp;#34;&amp;#34;&amp;#34; 5COPY (select * from foo) TO STDOUT WITH CSV HEADER ENCODING &amp;#39;UTF8&amp;#39;; 6&amp;#34;&amp;#34;&amp;#34; 7 8sourceCursor = sourceConn.cursor() 9sourceCursor.copy_expert(sql, s) 10 11# Import from memory buffer to destination database 12sql = &amp;#34;&amp;#34;&amp;#34; 13COPY bar from STDIN WITH CSV HEADER ENCODING &amp;#39;UTF8&amp;#39;; 14&amp;#34;&amp;#34;&amp;#34; 15destinationCursor = destinationConn.cursor() 16destinationCursor.copy_expert(sql, s)  参考：
 https://www.psycopg.org/docs/cursor.html#cursor.copy_expert  </description>
    </item>
    
  </channel>
</rss>
